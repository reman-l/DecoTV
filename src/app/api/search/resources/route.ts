/* eslint-disable no-console */

import { NextRequest, NextResponse } from 'next/server';

import { getAuthInfoFromCookie } from '@/lib/auth';
import { getAvailableApiSites, getConfig } from '@/lib/config';

export const runtime = 'nodejs';

// OrionTV ÂÖºÂÆπÊé•Âè£ - Ëé∑ÂèñÂèØÁî®ÁöÑËßÜÈ¢ëÊ∫êÂàóË°®
export async function GET(request: NextRequest) {
  const authInfo = getAuthInfoFromCookie(request);
  if (!authInfo || !authInfo.username) {
    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
  }

  try {
    const { searchParams } = new URL(request.url);
    const config = await getAvailableApiSites(authInfo.username);
    const globalConfig = await getConfig();

    let apiSites = config;

    // üîí Êàê‰∫∫ÂÜÖÂÆπËøáÊª§ÈÄªËæë
    // URL ÂèÇÊï∞‰ºòÂÖàÁ∫ß: ?adult=1 (ÊòæÁ§∫Êàê‰∫∫) > ?filter=off (ÊòæÁ§∫Êàê‰∫∫) > ÂÖ®Â±ÄÈÖçÁΩÆ
    const adultParam = searchParams.get('adult'); // OrionTV È£éÊ†ºÂèÇÊï∞
    const filterParam = searchParams.get('filter'); // TVBox È£éÊ†ºÂèÇÊï∞

    let shouldFilterAdult = !globalConfig.SiteConfig.DisableYellowFilter; // ÈªòËÆ§‰ΩøÁî®ÂÖ®Â±ÄÈÖçÁΩÆ

    // URL ÂèÇÊï∞Ë¶ÜÁõñÂÖ®Â±ÄÈÖçÁΩÆ
    if (adultParam === '1' || adultParam === 'true') {
      shouldFilterAdult = false; // ÊòæÂºèÂêØÁî®Êàê‰∫∫ÂÜÖÂÆπ
    } else if (adultParam === '0' || adultParam === 'false') {
      shouldFilterAdult = true; // ÊòæÂºèÁ¶ÅÁî®Êàê‰∫∫ÂÜÖÂÆπ
    } else if (filterParam === 'off' || filterParam === 'disable') {
      shouldFilterAdult = false; // Á¶ÅÁî®ËøáÊª§ = ÊòæÁ§∫Êàê‰∫∫ÂÜÖÂÆπ
    } else if (filterParam === 'on' || filterParam === 'enable') {
      shouldFilterAdult = true; // ÂêØÁî®ËøáÊª§ = ÈöêËóèÊàê‰∫∫ÂÜÖÂÆπ
    }

    // Â∫îÁî®ËøáÊª§
    if (shouldFilterAdult) {
      apiSites = apiSites.filter((site) => !site.is_adult);
    }

    return NextResponse.json(apiSites, {
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'GET, OPTIONS',
        'Access-Control-Allow-Headers': 'Content-Type, Cookie',
        'X-Adult-Filter': shouldFilterAdult ? 'enabled' : 'disabled', // Ë∞ÉËØï‰ø°ÊÅØ
      },
    });
  } catch (error) {
    return NextResponse.json({ error: 'Ëé∑ÂèñËµÑÊ∫êÂ§±Ë¥•' }, { status: 500 });
  }
}

// CORS È¢ÑÊ£ÄËØ∑Ê±Ç
export async function OPTIONS() {
  return new NextResponse(null, {
    status: 204,
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Cookie',
      'Access-Control-Max-Age': '86400',
    },
  });
}
